//https://school.programmers.co.kr/learn/courses/30/lessons/155651
import java.util.PriorityQueue;
import java.util.Arrays;
import java.util.Comparator;
class Solution {
    public int solution(String[][] book_time) {
        int answer = 0;
        int[][] bookTime = new int[book_time.length][2];       
        
        for(int i=0;i<book_time.length;i++){
            int start = Integer.parseInt(book_time[i][0].replace(":",""));
            int end = Integer.parseInt(book_time[i][1].replace(":",""));
            
            end+=10;
            
            if(end%100 >= 60){
                end+=40;        
            }

            bookTime[i][0] = start;
            bookTime[i][1] = end;
        }
        
        // 첫번째 숫자(시작 시각) 기준으로 오름차순 정렬
        Arrays.sort(bookTime, (a,b) -> a[0]-b[0]);
        
    
        // 두번째 숫자(종료시각) 기준으로 오름차순 정렬
        PriorityQueue<int[]> checkout = new PriorityQueue<>(Comparator.comparingInt(a -> a[1]));
        
        for(int[] book : bookTime){ //정수형 4자리 숫자로 변환
            if(checkout.isEmpty()){
                checkout.add(book);
            }else{
                int[] temp = checkout.peek();
                int start = temp[0];
                int end = temp[1];
                
                if(book[0] >= end){     //다음 입실시각 >= 이전 퇴실시각
                    checkout.poll();    // 다른 방 배정할 필요가 없기 때문
                }
                
                checkout.add(book);
            }
        }
        
        // 반복문을 다 돈후 checkout에 남아있는 타임들은 앞에 다른 방의 타임들과 겹쳐서 남아있는 것들
        answer = checkout.size();       
        return answer;
    }
}