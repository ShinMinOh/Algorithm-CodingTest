class Solution {
    boolean[] visited;
    public int solution(int n, int[][] computers) {
        int cnt = 0;              		// 네트워크 개수 카운트
        visited = new boolean[n]; 		//방문 체크배열 생성
        
        for(int i=0;i<n;i++){
            if(!visited[i]){                   		// 아직 방문하지 않은 컴퓨터라면
                dfs(computers, visited, i);    	// dfs이용해서 연결된 컴퓨터 모두 방문
                cnt++;                         	// dfs를 빠져나와서 연결된 네트워크는 하나로 치므로 +1 카운트
            }
        }
        return cnt;
    }
    
    
    public void dfs(int[][] computers, boolean[] visited, int k){
        visited[k] = true;                             		// 현재 컴퓨터를 방문 처리 
        for(int i=0; i<computers.length; i++){
            if(computers[k][i] == 1 && !visited[i]){   	//연결되있는데 다음노드에 아직 방문 전인 경우
                dfs(computers, visited, i);            		// 연결된 컴퓨터를 재귀적으로 방문
            }
        }
    }
}