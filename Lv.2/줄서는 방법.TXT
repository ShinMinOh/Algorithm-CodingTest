//https://school.programmers.co.kr/learn/courses/30/lessons/12936
/*
1. 첫번째 숫자가 n! / n 번 나오는 것을 확인했다.
   이렇게 첫번째 숫자는 쉽게 구할 수 있다. k=7 이므로 첫번째 숫자는 2이다. 이는 배열 [1,2,3,4]의 1번 인덱스이다.
   n! /n 번씩 첫번째 숫자가 나오고 k는 1부터 시작하므로 첫번째 숫자의 배열 인덱스는 (k-1)/(n!/n), 즉 (k-1) / (n-1)!이다.

2. 처음엔 순열을 구성하는 요소가 [1,2,3,4] 였고, 첫번째 숫자가 구해진 뒤에는 같은 방법으로, 
   중복을 제외한 요소 [1,3,4]중에, k = (k-1) % (n-1)!를 통해 구해짐을 알 수 있었다.
*/
import java.util.ArrayList;
class Solution {
    public int[] solution(int n, long k) {
        int[] answer = new int[n];
        ArrayList<Integer> list = new ArrayList<>();
        long factorial = 1;
        
        for(int i=1;i<=n;i++){
            list.add(i);
            factorial *= i;
        }
        
        int i = 0;
        long remain = k - 1;  // k가 1부터 시작하므로

          while (i < n) {
            factorial = factorial / (n - i);
            long value = remain / factorial;
            answer[i++] = list.get((int)value);
            list.remove((int)value);
            remain = remain % factorial;
        }

        return answer;
    }
}