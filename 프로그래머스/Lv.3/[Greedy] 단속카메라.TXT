/*
https://school.programmers.co.kr/learn/courses/30/lessons/42884
1. 끝점(진출점)을 기준으로 오름차순으로 정렬
2. 첫번째 경로와 두번째 경로의 교집합 찾기, 이때 (카메라 개수+1)
3. 교집합의 경로와 [i]번째 경로가 겹치는 부분이 있을경우 다음 경로로 넘어감
4. 겹치는 부분이 없을경우 카메라 대수의 카운트를 하나 올려준다
*/
import java.util.*;
class Solution {
    public int solution(int[][] routes) {
        int camera; // 설치할 카메라 좌표
        int count = 0;
        
        Arrays.sort(routes, (a,b) -> a[1]-b[1]);
        
        camera = routes[0][1];  //카메라 설치 좌표
        count++;
        
        for(int i=1;i<routes.length;i++){
            if( routes[i][0] <= camera){
                continue;
            }
            camera = routes[i][1];  // 카메라 설치 좌표와 겹치지 않을 경우 새로 설치할 카메라 좌표
            count++;
        }
        return count;
    }
}