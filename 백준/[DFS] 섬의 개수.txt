//https://www.acmicpc.net/problem/4963
import java.io.IOException;

import java.util.Scanner;
public class Main {
  static int w;
  static int h;
  static int[][] map;
  static boolean[][] visited;
  static int[] dx = {0, 0, -1, 1, -1, 1, -1, 1};
  static int[] dy = {-1, 1, 0, 0, 1, 1, -1, -1};
  static int result = 0;

  public static void main(String[] args) throws IOException {
   Scanner sc = new Scanner(System.in);

    while (true) {
      h = sc.nextInt();
      w = sc.nextInt();
      sc.nextLine();

      if (w == 0 && h == 0) {
        break;
      }

      map = new int[w][h];
      visited = new boolean[w][h];

      for (int i = 0; i < w; i++) {
        String tempStr = sc.nextLine();
        String[] nums = tempStr.split(" ");

        for (int j = 0; j < nums.length; j++) {
          map[i][j] = Integer.parseInt(nums[j]);
        }
      }

      int count = 0;

      for (int i = 0; i < w; i++) {
        for (int j = 0; j < h; j++) {
          if (map[i][j] == 1 && !visited[i][j]) {
            DFS(i, j);
            count++;
          }
        }
      }

      System.out.println(count);
    }
  }

  private static void DFS(int x, int y) {
    // 1. 방문 좌표를 'true'로 방문처리
    visited[x][y] = true;

    // 2. 상하좌우대각선 이동
    for(int i=0;i<8;i++){
      int nx = x + dx[i];
      int ny = y + dy[i];

      if(nx>=0 && nx<w && ny>=0 && ny<h){
        if(map[nx][ny] == 1 && !visited[nx][ny]){
          DFS(nx,ny);
        }
      }
    }
  }


}